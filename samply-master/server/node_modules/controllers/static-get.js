'use strict';

const fs           = require('fs');
const join         = require('path').join;
//
const MIMETYPES    = require('../mimetypes');
const ENCODES      = require('../encodes');


const staticGet = (data) => {

  /*
  Serve the resource.
  */
  let [, resource_path, resource_type, resource_name] = data.request.url.match(data.sign);
  let fpath = join(data.shdata.paths.public_resources, resource_path)
  console.log(`resource path is ${fpath}`);
  if (fs.statSync(fpath).isFile()) {
    data.response.writeHead(200, {'content-type': MIMETYPES[resource_type]});
    data.response.end(fs.readFileSync(fpath, ENCODES[resource_type]||'utf8'));
    return Promise.resolve({
      success: true,
      details: {
        status: 200,
        message: 'OK.',
        resource: fpath
      }
    });
  } else {
    data.response.writeHead(404, {'content-type': 'text/plain'});
    data.response.end(`Resource ${resource_path} not found.`);
    return Promise.resolve({
      success: false,
      details: {
        status: 404,
        message: 'Resource not found.',
        resource: fpath
      }
    });
  }
 //
}

module.exports = staticGet;
